[{"/home/rojit/dj-react/sg_frontend/src/components/places/Place.js":"1","/home/rojit/dj-react/sg_frontend/src/components/places/PlaceList.js":"2","/home/rojit/dj-react/sg_frontend/src/layouts/Dashboard.js":"3","/home/rojit/dj-react/sg_frontend/src/utils/navlinks.js":"4","/home/rojit/dj-react/sg_frontend/src/reportWebVitals.js":"5","/home/rojit/dj-react/sg_frontend/src/pages/Register.js":"6","/home/rojit/dj-react/sg_frontend/src/components/Profile.js":"7","/home/rojit/dj-react/sg_frontend/src/App.js":"8","/home/rojit/dj-react/sg_frontend/src/components/wishlist/WishListList.js":"9","/home/rojit/dj-react/sg_frontend/src/utils/toastr.js":"10","/home/rojit/dj-react/sg_frontend/src/PrivateRoute.js":"11","/home/rojit/dj-react/sg_frontend/src/context/auth.js":"12","/home/rojit/dj-react/sg_frontend/src/pages/Activate.js":"13","/home/rojit/dj-react/sg_frontend/src/requests.js":"14","/home/rojit/dj-react/sg_frontend/src/pages/Login.js":"15","/home/rojit/dj-react/sg_frontend/src/components/maps/Maps.js":"16","/home/rojit/dj-react/sg_frontend/src/index.js":"17","/home/rojit/dj-react/sg_frontend/src/components/recommendation/NearestPlace.js":"18"},{"size":1567,"mtime":1608462436865,"results":"19","hashOfConfig":"20"},{"size":4429,"mtime":1608705272601,"results":"21","hashOfConfig":"20"},{"size":4865,"mtime":1608720452472,"results":"22","hashOfConfig":"20"},{"size":1104,"mtime":1609390226335,"results":"23","hashOfConfig":"20"},{"size":362,"mtime":1608046475158,"results":"24","hashOfConfig":"20"},{"size":5137,"mtime":1608471477014,"results":"25","hashOfConfig":"20"},{"size":2677,"mtime":1609563406772,"results":"26","hashOfConfig":"20"},{"size":838,"mtime":1608220640107,"results":"27","hashOfConfig":"20"},{"size":3317,"mtime":1608469421638,"results":"28","hashOfConfig":"20"},{"size":331,"mtime":1608206181203,"results":"29","hashOfConfig":"20"},{"size":473,"mtime":1608103797761,"results":"30","hashOfConfig":"20"},{"size":368,"mtime":1608103909821,"results":"31","hashOfConfig":"20"},{"size":963,"mtime":1608222554180,"results":"32","hashOfConfig":"20"},{"size":405,"mtime":1608469976973,"results":"33","hashOfConfig":"20"},{"size":3973,"mtime":1608271094284,"results":"34","hashOfConfig":"20"},{"size":3110,"mtime":1608449872763,"results":"35","hashOfConfig":"20"},{"size":376,"mtime":1608270836169,"results":"36","hashOfConfig":"20"},{"size":2050,"mtime":1609390032346,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"uamspt",{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"45"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/rojit/dj-react/sg_frontend/src/components/places/Place.js",["86","87"],"import React, { useState, useEffect } from 'react';\nimport requestInstance from '../../requests';\nimport { useParams } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport default function Place() {\n\n  const { id } = useParams();\n  const [loading, setLoading] = useState(false)\n  const [place, setPlace] = useState({\n    id: \"\",\n    type: \"\",\n    geometry: {},\n    properties: {},\n\n  })\n  useEffect(() => {\n    setLoading(true)\n    requestInstance.get(`places/${id}/`).then(res => {\n      setPlace(res.data)\n      setLoading(false)\n    })\n  }, [])\n\n  return (\n    <div className=\"container\">\n      {\n        loading? (\n          <CircularProgress style={{zIndex:'10', width: '100px', height: '100px', textAlign: 'center', position: 'fixed', top: '50%', left: '50%' }} />\n        ) : ''\n      }\n      <div className=\"row\">\n        <div className=\"col-md-5\">\n          <img width=\"100%\" src={place.properties.image ? place.properties.image : 'http://localhost:8000/media/places/pkr.jpeg'} />\n        </div>\n        <div className=\"col-md-7\">\n          <h2 style={{ display: 'inline' }}>{place.properties.name}</h2>, &nbsp;<p style={{ display: 'inline' }}>{place.properties.major_district}</p>\n          <p>{place.properties.subhead}</p>\n\n          <p>{place.properties.description}</p>\n          <hr />\n          <p>Is in city area : {place.properties.in_city_area ? 'Yes' : 'No'}</p>\n          <p>Is world herritage: {place.properties.is_world_herritage ? 'Yes' : 'No'}</p>\n        </div>\n      </div>\n    </div>\n\n  );\n}\n",["88","89"],"/home/rojit/dj-react/sg_frontend/src/components/places/PlaceList.js",["90"],"import React, { useEffect, useState } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport requestInstance from '../../requests';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport { toastContainer } from '../../utils/toastr'\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useStateIfMounted } from 'use-state-if-mounted'\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 500,\n    margin: '20px',\n  }\n});\n\n\nexport default function PlaceList() {\n\n  const classes = useStyles();\n  const [loading,setLoading] = useState(false)\n  const { url } = useRouteMatch();\n  const [originalPlaces,setOriginalPlaces] = useState([])\n  const [places, setPlaces] = useStateIfMounted([]);\n\n\n  useEffect(() => {\n    setLoading(true)\n    requestInstance.get('places/').then(res => {\n      setPlaces(res.data.features)\n      setOriginalPlaces(res.data.features)\n      setLoading(false)\n    }).catch(err => {\n      console.log(err)\n    })\n  }, [])\n\n  const searchChange = (e) =>{\n    let value = e.target.value\n    if(value === ''){\n      setPlaces(originalPlaces)\n    }else{\n      setPlaces(places.filter(place=>{\n        return place.properties.name.toLowerCase().includes(value.toLowerCase())\n      }))\n    }\n  }\n\n  \n  const addToWishList = (place_id) => {\n    requestInstance.post('wishlist/', {\n      place_id: place_id\n    }).then(res => {\n      if (res && res.status && res.status === 201) {\n        toast.success('Added to wishlist', {\n          position: \"top-center\",\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        })\n      }\n    }).catch(e => {\n      if (e && e.response && e.response.status === 403) {\n        toast.info('Already in wishlist', {\n          position: \"top-center\",\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        })\n      }\n    })\n  }\n\n  return <div className=\"row\">\n     <TextField\n          id=\"standard-multiline-flexible\"\n          label=\"Search\"\n          multiline\n          rowsMax={4}\n          onChange={searchChange}\n        />\n        \n        \n    <div className=\"row\">\n      {toastContainer}\n      {\n        loading? (\n          <CircularProgress style={{ width: '100px', height: '100px', textAlign: 'center', position: 'fixed', top: '50%', left: '50%' }} />\n        ) : ''\n      }\n\n      {\n        places.map((place, key) => {\n          return <div key={key}>\n            <Card className={classes.root}>\n              <CardActionArea>\n                <CardMedia\n                  component=\"img\"\n                  alt={place.properties.name}\n                  height=\"180\"\n                  image={place.properties.image ? place.properties.image : 'http://localhost:8000/media/places/pkr.jpeg'}\n                  title={place.properties.name}\n                />\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    <Link to={`${url}/${place.id}`}>{place.properties.name}</Link>, <small>{place.properties.subhead}</small>\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {place.properties.description.length < 100 ? (place.properties.description) : (place.properties.description.slice(0, 100) + ' ... Read More')}\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n              <CardActions>\n                <Button onClick={() => addToWishList(place.id)} size=\"small\" color=\"primary\">\n                  Add to wishlist\n          </Button>\n              </CardActions>\n            </Card>\n\n          </div>\n        })\n      }\n\n    </div>\n  </div>\n}",["91","92"],"/home/rojit/dj-react/sg_frontend/src/layouts/Dashboard.js",["93"],"import React, { useEffect,useContext } from 'react';\nimport { Switch, Link, Route, useRouteMatch,useHistory } from 'react-router-dom';\nimport { navlinks } from '../utils/navlinks';\nimport PlaceList from '../components/places/PlaceList.js';\nimport Place from '../components/places/Place.js';\nimport Maps from '../components/maps/Maps';\nimport WishListList from '../components/wishlist/WishListList';\nimport Profile from '../components/Profile';\nimport requestInstance from '../requests';\nimport { AuthContext } from '../context/auth';\nimport {useStateIfMounted} from 'use-state-if-mounted'\nimport NearestPlace from '../components/recommendation/NearestPlace';\n\nexport default function Dashboard() {\n\n  const [userData, setUserData] = useStateIfMounted(null)\n  const history = useHistory()\n  const [, setAuthToken] = useContext(AuthContext)\n\n\n  useEffect(() => {\n     requestInstance.get('auth/users/me/').then((res) => {\n      const data = res.data\n      localStorage.setItem('firstname',data.firstname)\n      localStorage.setItem('lastname',data.lastname)\n      localStorage.setItem('email',data.email)\n      setUserData(data)\n    }).catch(err => {\n      console.log(err)\n    })\n  }, [])\n\n  const logoutUser = () =>{\n    requestInstance.post('auth/token/logout/').then(res=>{\n      if(res && res.status === 204){\n        localStorage.clear()\n        setAuthToken(null)\n        requestInstance.defaults.headers['Authorization'] = null;\n        history.push('/login')\n      }\n    }).catch(e=>{\n      history.push('/login')\n    })\n  }\n\n  const { path } = useRouteMatch();\n\n  return <>\n    <div className=\"container-scroller\">\n      <nav className=\"navbar col-lg-12 col-12 p-0 fixed-top d-flex flex-row\">\n        <div className=\"navbar-brand-wrapper d-flex justify-content-center\">\n          <div className=\"navbar-brand-inner-wrapper d-flex justify-content-between align-items-center w-100\">\n\n            <Link className=\"navbar-brand brand-logo\" to='/'><img src={`${process.env.PUBLIC_URL}/dist/images/logo/logo.png`} alt=\"logo\" /></Link>\n\n            <Link className=\"navbar-brand brand-logo-mini\" to=\"#\"><img src={`${process.env.PUBLIC_URL}/dist/images/logo/logo.png`} alt=\"logo\" /></Link>\n            <button className=\"navbar-toggler navbar-toggler align-self-center\" type=\"button\" data-toggle=\"minimize\">\n              <span className=\"mdi mdi-sort-variant\"></span>\n            </button>\n          </div>\n        </div>\n        <div className=\"navbar-menu-wrapper d-flex align-items-center justify-content-end\">\n\n          <ul className=\"navbar-nav navbar-nav-right\">\n            <li className=\"nav-item nav-profile dropdown\">\n              <Link className=\"nav-link dropdown-toggle\" to=\"#\" data-toggle=\"dropdown\" id=\"profileDropdown\">\n                <img src={`${process.env.PUBLIC_URL}/dist/images/faces/face5.jpg`} alt=\"profile\" />\n                <span className=\"nav-profile-name\">{userData ? (userData.firstname + ' ' + userData.lastname) : ''}</span>\n              </Link>\n              <div className=\"dropdown-menu dropdown-menu-right navbar-dropdown\" aria-labelledby=\"profileDropdown\">\n                <Link className=\"dropdown-item\" to={`${path}/profile`}>\n                  <i className=\"mdi mdi-settings text-primary\"></i>\n                Profile\n              </Link>\n                <Link to=\"#\" className=\"dropdown-item\" onClick={logoutUser}>\n                  <i className=\"mdi mdi-logout text-primary\"></i>\n                Logout\n              </Link>\n              </div>\n            </li>\n          </ul>\n          <button className=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\"\n            data-toggle=\"offcanvas\">\n            <span className=\"mdi mdi-menu\"></span>\n          </button>\n        </div>\n      </nav>\n      <div className=\"container-fluid page-body-wrapper\">\n        <nav className=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\n          {navlinks}\n        </nav>\n        <div className=\"main-panel\">\n          <div className=\"content-wrapper\">\n            <div className=\"row\">\n              <div className=\"col-md-12 grid-margin\">\n                <div className=\"d-flex justify-content-between flex-wrap\">\n\n                  <Switch>\n                    <Route exact path={`${path}/places`}> <PlaceList /> </Route>\n                    <Route exact path={`${path}/places/:id`}> <Place /> </Route>\n                    <Route exact path={`${path}/maps`}> <Maps /> </Route>\n                    <Route exact path={`${path}/wishlist`}> <WishListList /> </Route>\n                    <Route exact path={`${path}/profile`}> <Profile /> </Route>\n                    <Route exact path={`${path}/nearest`}> <NearestPlace /> </Route>\n\n                  </Switch>\n                  \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </>\n}","/home/rojit/dj-react/sg_frontend/src/utils/navlinks.js",[],"/home/rojit/dj-react/sg_frontend/src/reportWebVitals.js",[],["94","95"],"/home/rojit/dj-react/sg_frontend/src/pages/Register.js",[],["96","97"],"/home/rojit/dj-react/sg_frontend/src/components/Profile.js",["98","99","100"],"import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom'\nimport './Profile.css';\nimport { useForm } from 'react-hook-form'\nimport requestInstance from '../requests';\nimport { useStateIfMounted } from 'use-state-if-mounted';\n\n\nexport default function Profile() {\n\n\tconst { register, handleSubmit } = useForm()\n\tconst [userDetail, setuserDetail] = useStateIfMounted({})\n\n\tconst [user, setUser] = useState({\n\t\tfirstname: localStorage.getItem('firstname') || null,\n\t\tlastname: localStorage.getItem('lastname') || null,\n\t\temail: localStorage.getItem('email') || null,\n\t})\n\n\tconst onSubmit = data => {\n\t\trequestInstance.put('profile/', { country: data.country, address: data.address }).then(res => {\n\t\t\tconsole.log(res.data)\n\t\t})\n\t}\n\n\tconst getProfile = () => {\n\t\trequestInstance.get('profile/').then(res => {\n\t\t\tif (res.status === 200) {\n\t\t\t\tsetuserDetail(res.data)\n\t\t\t}\n\t\t}).catch(e => {\n\t\t\tif (e.response.status == 304) {\n\t\t\t\trequestInstance.post('profile/', { country: '', address: '' }).then(res => {\n\n\t\t\t\t}).catch(e => {\n\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\tgetProfile()\n\t}, [])\n\n\n\treturn <>\n\t\t<div className=\"container\">\n\t\t\t<div className=\"row gutters-sm\">\n\t\t\t\t<div className=\"col-md-4 mb-3\">\n\t\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t\t<div className=\"d-flex flex-column align-items-center text-center\">\n\t\t\t\t\t\t\t\t<img src={`${process.env.PUBLIC_URL}/dist/images/faces/face5.jpg`} alt=\"Admin\" className=\"rounded-circle\" width=\"150\" />\n\t\t\t\t\t\t\t\t<div className=\"mt-3\">\n\t\t\t\t\t\t\t\t\t<h4>{user.firstname + ' ' + user.lastname}</h4>\n\t\t\t\t\t\t\t\t\t<p className=\"text-secondary mb-1\">{user.email}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-md-8\">\n\t\t\t\t\t<div className=\"card mb-3\">\n\t\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t\t<h3>Editable fields</h3> <hr />\n\t\t\t\t\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t\t<div className=\"col-sm-3\">\n\t\t\t\t\t\t\t\t\t\t<h6 className=\"mb-0\">Country</h6>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"col-sm-9 text-secondary\">\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"country\" defaultValue={userDetail.country || ''} ref={register} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t\t<div className=\"col-sm-3\">\n\t\t\t\t\t\t\t\t\t\t<h6 className=\"mb-0\">Address</h6>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"col-sm-9 text-secondary\">\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"address\" defaultValue={userDetail.address || ''} ref={register} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t\t<input type=\"submit\" value=\"Update\" />\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t</>\n}","/home/rojit/dj-react/sg_frontend/src/App.js",[],"/home/rojit/dj-react/sg_frontend/src/components/wishlist/WishListList.js",[],"/home/rojit/dj-react/sg_frontend/src/utils/toastr.js",[],"/home/rojit/dj-react/sg_frontend/src/PrivateRoute.js",[],["101","102"],"/home/rojit/dj-react/sg_frontend/src/context/auth.js",[],"/home/rojit/dj-react/sg_frontend/src/pages/Activate.js",["103"],"import { ListItemSecondaryAction } from '@material-ui/core';\nimport React from 'react';\nimport { useParams,useHistory} from 'react-router-dom'\nimport requestInstance from '../requests';\n\nexport default function Activate() {\n\n    const { uid, token } = useParams()\n    const history = useHistory()\n\n    const activateAccount = () => {\n        requestInstance.post('auth/users/activation/',{\n            uid:uid,\n            token:token\n        }).then(res=>{\n            if(res && res.status === 204){\n                history.push('/login')\n            }else{\n                alert('please try again later')\n            }\n        }).catch(e=>{\n            alert('The link might be expired')\n        })\n\n    }\n\n    return <>\n        <div style={{textAlign:'center'}}>\n            <button style={{ position: 'absolute',left:'45%', top:\"40%\",height:'10%', width:'10%' }} className='btn btn-primary' onClick={activateAccount}>Activate</button>\n        </div>\n    </>\n}","/home/rojit/dj-react/sg_frontend/src/requests.js",[],"/home/rojit/dj-react/sg_frontend/src/pages/Login.js",[],["104","105"],"/home/rojit/dj-react/sg_frontend/src/components/maps/Maps.js",["106","107"],"import React, { useEffect, useState } from 'react';\nimport ReactMapGL, { Marker, Popup, NavigationControl } from 'react-map-gl';\nimport { useStateIfMounted } from 'use-state-if-mounted'\nimport requestInstance from '../../requests';\nimport 'react-map-gl-directions/dist/mapbox-gl-directions.css'\n\n\n\nfunction Maps() {\n  const [viewport, setViewport] = useStateIfMounted({\n    width: 1400,\n    height: 800,\n    latitude: 0,\n    longitude: 0,\n    zoom: 9\n  });\n\n  const [places, setPlaces] = useStateIfMounted([])\n  const [currentLocation, setCurrentLocation] = useStateIfMounted({ lat: 0, lng: 0 })\n  const [selectedPlace, setSelectedPlace] = useState(null)\n\n\n  const getCurrentLocation = () => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        viewport.latitude = position.coords.latitude\n        viewport.longitude = position.coords.longitude\n        setCurrentLocation({ lat: position.coords.latitude, lng: position.coords.longitude })\n\n      });\n    } else {\n      alert('Please enable geolocation location access')\n    }\n  }\n\n  const getPlaceList = () => {\n    requestInstance.get('places/').then(res => {\n      setPlaces(res.data.features)\n    }).catch(err => {\n      console.log(err)\n    })\n  }\n\n  useEffect(() => {\n    getCurrentLocation()\n    getPlaceList()\n  }, [])\n\n\n\n  return (\n    <div style={{ margin: 'auto' }}>\n\n      <ReactMapGL {...viewport} mapboxApiAccessToken=\"pk.eyJ1Ijoicm9qaXQwMTciLCJhIjoiY2tpdHlodWg1MDZ2ZjJxbnVoNWEwemN2dyJ9.IpAPprX_FvyWF4HoEpFpDQ\"\n        mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n        onViewportChange={viewport => {\n          setViewport(viewport)\n        }}\n      >\n\n        <div style={{ position: 'absolute', right: 0 }}>\n          <NavigationControl />\n        </div>\n\n        {\n          places.map(place => {\n            return <Marker key={place.id} latitude={place.geometry.coordinates[1]} longitude={place.geometry.coordinates[0]}>\n              <span onClick={(e) => {\n                e.preventDefault()\n                setSelectedPlace(place)\n              }} style={{ color: '#F37257', 'cursor': 'pointer', 'fontSize': '200%' }}><i className=\"mdi mdi-map-marker\"></i></span>\n            </Marker>\n          })\n        }\n        <Marker latitude={currentLocation.lat} longitude={currentLocation.lng}>\n          <span onClick={(e) => {\n            e.preventDefault()\n            alert('You are here')\n          }} style={{ color: 'blue', 'cursor': 'pointer', 'fontSize': '200%' }}><i className=\"mdi mdi-map-marker\"></i></span>\n        </Marker>\n\n        {selectedPlace ? (\n          <Popup latitude={selectedPlace.geometry.coordinates[1]} longitude={selectedPlace.geometry.coordinates[0]}\n            onClose={() => {\n              setSelectedPlace(null)\n            }}\n          >\n            <div>\n              <h3>{selectedPlace.properties.name}</h3>\n              <img src={selectedPlace.properties.image} style={{ maxWidth: '150px' }} alt=\"image\" />\n            </div>\n          </Popup>\n        )\n          : ''}\n\n\n\n      </ReactMapGL>\n\n    </div>\n\n  );\n}\n\nexport default Maps;","/home/rojit/dj-react/sg_frontend/src/index.js",[],"/home/rojit/dj-react/sg_frontend/src/components/recommendation/NearestPlace.js",["108"],{"ruleId":"109","severity":1,"message":"110","line":23,"column":6,"nodeType":"111","endLine":23,"endColumn":8,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":34,"column":11,"nodeType":"115","endLine":34,"endColumn":133},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"109","severity":1,"message":"120","line":45,"column":6,"nodeType":"111","endLine":45,"endColumn":8,"suggestions":"121"},{"ruleId":"116","replacedBy":"122"},{"ruleId":"118","replacedBy":"123"},{"ruleId":"109","severity":1,"message":"124","line":31,"column":6,"nodeType":"111","endLine":31,"endColumn":8,"suggestions":"125"},{"ruleId":"116","replacedBy":"126"},{"ruleId":"118","replacedBy":"127"},{"ruleId":"116","replacedBy":"128"},{"ruleId":"118","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":14,"column":15,"nodeType":"132","messageId":"133","endLine":14,"endColumn":22},{"ruleId":"134","severity":1,"message":"135","line":32,"column":26,"nodeType":"136","messageId":"137","endLine":32,"endColumn":28},{"ruleId":"109","severity":1,"message":"138","line":44,"column":5,"nodeType":"111","endLine":44,"endColumn":7,"suggestions":"139"},{"ruleId":"116","replacedBy":"140"},{"ruleId":"118","replacedBy":"141"},{"ruleId":"130","severity":1,"message":"142","line":1,"column":10,"nodeType":"132","messageId":"133","endLine":1,"endColumn":33},{"ruleId":"116","replacedBy":"143"},{"ruleId":"118","replacedBy":"144"},{"ruleId":"109","severity":1,"message":"145","line":47,"column":6,"nodeType":"111","endLine":47,"endColumn":8,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":90,"column":15,"nodeType":"115","endLine":90,"endColumn":101},{"ruleId":"109","severity":1,"message":"120","line":27,"column":8,"nodeType":"111","endLine":27,"endColumn":10,"suggestions":"149"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["150"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["151"],"no-negated-in-lhs",["152"],"React Hook useEffect has a missing dependency: 'setPlaces'. Either include it or remove the dependency array.",["153"],["151"],["152"],"React Hook useEffect has a missing dependency: 'setUserData'. Either include it or remove the dependency array.",["154"],["151"],["152"],["151"],["152"],"no-unused-vars","'setUser' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getProfile'. Either include it or remove the dependency array.",["155"],["151"],["152"],"'ListItemSecondaryAction' is defined but never used.",["151"],["152"],"React Hook useEffect has missing dependencies: 'getCurrentLocation' and 'getPlaceList'. Either include them or remove the dependency array.",["156"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["157"],{"desc":"158","fix":"159"},"no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"160","fix":"168"},"Update the dependencies array to be: [id]",{"range":"169","text":"170"},"Update the dependencies array to be: [setPlaces]",{"range":"171","text":"172"},"Update the dependencies array to be: [setUserData]",{"range":"173","text":"174"},"Update the dependencies array to be: [getProfile]",{"range":"175","text":"176"},"Update the dependencies array to be: [getCurrentLocation, getPlaceList]",{"range":"177","text":"178"},{"range":"179","text":"172"},[591,593],"[id]",[1506,1508],"[setPlaces]",[1184,1186],"[setUserData]",[1119,1121],"[getProfile]",[1336,1338],"[getCurrentLocation, getPlaceList]",[911,913]]